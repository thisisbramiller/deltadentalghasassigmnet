name: CodeQL

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '*'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '*'

jobs:
  find-paths-with-changes:
    name: Find paths with changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix-values.outputs.matrix }} 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Get all paths
        if: ${{ github.event_name != 'pull_request' }}
        id: get-all-paths
        run: |
          echo "::set-output name=all-paths::$(./.github/scripts/list-all-paths)"

      - name: Get changed paths
        if: ${{ github.event_name == 'pull_request' }}
        id: get-changed-paths
        run: |
            git diff --name-only ${{ github.event_before }} ${{ github.after }} > ./.github/scripts/diff.txt
            echo "::set-output name=changed-paths::$(./.github/scripts/list-changed-paths)"

      - name: Set matrix values
        id: set-matrix-values
        env:
          ALL_PATHS: ${{ steps.get-all-paths.outputs.all-paths }}
          CHANGED_PATHS: ${{ steps.get-changed-paths.outputs.changed-paths }}
        run: |
          echo "::set-output name=matrix::$ALL_PATHS$CHANGED_PATHS"
          echo "::notice::Matrix values set to $ALL_PATHS$CHANGED_PATHS"

  scan:
    name: Analyze code with CodeQL
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      # normally contents and actions permissions are required for private repositories, however, it commented out for demonstration purposes on a public repositories
      # contents: read
      # actions: write
      security-events: write

    strategy:
      # fail-fast is true by default, but it's included here for demonstration purposes and request for explicit notation from the interviewer
      fail-fast: true
      matrix:
        language: [ 'java-kotlin', 'javascript-typescript' ]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
        
      # Here I have an opprotunity to use the autobuild functionality provided by GitHub
      # and build the project based on the language provided in the matrix. However, in 
      # respects to the request to use explicit notation, I will not include the autobuild
      # step and opt to build manually in the next step. This would also allow us to have
      # more control over the build process.

      - if: matrix.language == 'java-kotlin'
        name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          server-id: github
          settings-path: ${{ github.workspace }}

      - if: matrix.language == 'java-kotlin'
        name: Build project
        run: mvn package -f ./backend/pom.xml

      - name: Analyze with CodeQL
        uses: github/codeql-action/analyze@v3
        with:
          # matrix is imlicitly available to all steps in the job
          # it is included explicitly here for demonstration purposes
          # per interviewer's request
          matrix: ${{ toJson(matrix) }}
